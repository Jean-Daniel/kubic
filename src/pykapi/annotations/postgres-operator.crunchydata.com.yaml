patches:
  BackupPgbackrest:
    configuration: "io.k8s.api.core.v1.VolumeProjection"
  Config:
    files: "io.k8s.api.core.v1.VolumeProjection"
  Dedicated:
    affinity: "io.k8s.api.core.v1.Affinity"
  DataSourcePostgresCluster:
    affinity: "io.k8s.api.core.v1.Affinity"
    resources: "io.k8s.api.core.v1.ResourceRequirements"
    tolerations: "io.k8s.api.core.v1.Toleration"
  DataSourcePgbackrest:
    affinity: "io.k8s.api.core.v1.Affinity"
    configuration: "io.k8s.api.core.v1.VolumeProjection"
    resources: "io.k8s.api.core.v1.ResourceRequirements"
    tolerations: "io.k8s.api.core.v1.Toleration"
  Exporter:
    configuration: "io.k8s.api.core.v1.VolumeProjection"
    resources: "io.k8s.api.core.v1.ResourceRequirements"
  Instance:
    affinity: "io.k8s.api.core.v1.Affinity"
    containers: "io.k8s.api.core.v1.Container"
    dataVolumeClaimSpec: "io.k8s.api.core.v1.PersistentVolumeClaimSpec"
    resources: "io.k8s.api.core.v1.ResourceRequirements"
    tolerations: "io.k8s.api.core.v1.Toleration"
    topologySpreadConstraints: "io.k8s.api.core.v1.TopologySpreadConstraint"
    walVolumeClaimSpec: "io.k8s.api.core.v1.PersistentVolumeClaimSpec"
  JOB:
    affinity: "io.k8s.api.core.v1.Affinity"
    resources: "io.k8s.api.core.v1.ResourceRequirements"
    tolerations: "io.k8s.api.core.v1.Toleration"
  PgAdmin:
    affinity: "io.k8s.api.core.v1.Affinity"
    dataVolumeClaimSpec: "io.k8s.api.core.v1.PersistentVolumeClaimSpec"
    resources: "io.k8s.api.core.v1.ResourceRequirements"
    tolerations: "io.k8s.api.core.v1.Toleration"
    topologySpreadConstraints: "io.k8s.api.core.v1.TopologySpreadConstraint"
  PgbackrestConfig:
    resources: "io.k8s.api.core.v1.ResourceRequirements"
  PgBouncer:
    affinity: "io.k8s.api.core.v1.Affinity"
    containers: "io.k8s.api.core.v1.Container"
    customTLSSecret: "io.k8s.api.core.v1.SecretProjection"
    resources: "io.k8s.api.core.v1.ResourceRequirements"
    tolerations: "io.k8s.api.core.v1.Toleration"
    topologySpreadConstraints: "io.k8s.api.core.v1.TopologySpreadConstraint"
  PgbouncerConfig:
    resources: "io.k8s.api.core.v1.ResourceRequirements"
  PGUpgradeSpec:
    affinity: "io.k8s.api.core.v1.Affinity"
    imagePullSecrets: "io.k8s.api.core.v1.LocalObjectReference"
    resources: "io.k8s.api.core.v1.ResourceRequirements"
    tolerations: "io.k8s.api.core.v1.Toleration"
  PostgresClusterSpec:
    customReplicationTLSSecret: "io.k8s.api.core.v1.SecretProjection"
    customTLSSecret: "io.k8s.api.core.v1.SecretProjection"
    imagePullSecrets: "io.k8s.api.core.v1.LocalObjectReference"
  RepoHost:
    affinity: "io.k8s.api.core.v1.Affinity"
    sshSecret: "io.k8s.api.core.v1.SecretProjection"
    sshConfigMap: "io.k8s.api.core.v1.SecretProjection"
    resources: "io.k8s.api.core.v1.ResourceRequirements"
    tolerations: "io.k8s.api.core.v1.Toleration"
    topologySpreadConstraints: "io.k8s.api.core.v1.TopologySpreadConstraint"
  RepoVolume:
    volumeClaimSpec: "io.k8s.api.core.v1.PersistentVolumeClaimSpec"
  Restore:
    affinity: "io.k8s.api.core.v1.Affinity"
    resources: "io.k8s.api.core.v1.ResourceRequirements"
    tolerations: "io.k8s.api.core.v1.Toleration"
  SidecarPgbackrest:
    resources: "io.k8s.api.core.v1.ResourceRequirements"
  ReplicaCertCopy:
    resources: "io.k8s.api.core.v1.ResourceRequirements"
